package apiChaining;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONObject;
import org.testng.Assert;
import org.testng.annotations.Test;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class EndToEndTest {
	
	Response response;
	
    String BaseURI	= "http://localhost:3000/employees";
    
   
    
	
	@Test
	public void test1 () {
		
		
		response = GetMethodsAll ();
		Assert.assertEquals(response.getStatusCode(), 200);
//		String listofemps =json.get("names");
//		System.out.println("Got list of emp's are  " + listofemps);
		
		
		response= PostMethod("Shivaya","40000");
		Assert.assertEquals(response.getStatusCode(), 201);
		
		JsonPath json = response.jsonPath();
    	int UpEmID	= json.get("id");
    	System.out.println("created id is  " + UpEmID);
    	
    	
    	response = PutMethod(UpEmID, "OOMShivaya", "40000");
    	Assert.assertEquals(response.getStatusCode(), 200);
    	
    	String upemname =json.get("Name");
    	Assert.assertEquals(upemname, "OMShivaya");
    	System.out.println("updated name is "+ upemname);
    	
    	int salary =json.get("Salary");
    	System.out.println("updated salary is "+ salary);
    	
    	
    	
    	response = DelMethod();
    	Assert.assertEquals(response.getStatusCode(), 404);
    	String ResponseBody = response.body().asString();
    	System.out.println("body is empty" +ResponseBody);
       	   	
		
	}
	
	
	public Response GetMethodsAll () {
		
		 RestAssured.baseURI = BaseURI;
			
			RequestSpecification request = RestAssured.given();
			
			Response response = request.get();
			
			return response;
	}
	
	public Response PostMethod(String Name, String Salary) {
		
		RestAssured.baseURI = BaseURI;
		
        Map<String, Object> MapObj = new HashMap<String, Object> ();
		
		MapObj.put("name", Name);
		MapObj.put("salary", Salary);
		
		RequestSpecification request = RestAssured.given();
		
		Response response = request.contentType(ContentType.JSON).accept(ContentType.JSON).body(MapObj).post("/create");
			
	    return response;
	}
	    
	    public Response PutMethod (int UpEmID, String Name, String Salary) {
	    	
	    	RestAssured.baseURI = BaseURI ;
	    	
	    	JSONObject json = new JSONObject ();
	    	
	    	json.put("name", Name);
	    	json.put("salary", Salary);
	    	
	    	
	    	RequestSpecification request = RestAssured.given();
	    	
	    	Response response =  request.contentType(ContentType.JSON).accept(ContentType.JSON).body(json.toString()).put("/"+ UpEmID);
	    	
	    	return response;
	    	
	    }
	    
	    
	   public Response DelMethod() {
		   
		   RestAssured.baseURI = BaseURI;
		   
	       RequestSpecification request = RestAssured.given(); // send
	    	
	       Response response = request.delete("UpEmID");
	       
	       return response;
	    	
	    }
		
	}


